{"id":7,"jsonrpc":"2.0","result":[{"deprecated":false,"detail":"","documentation":"","filterText":"clone","insertText":"clone","insertTextFormat":1,"kind":2,"label":"clone","sortText":""},{"deprecated":false,"detail":"(function) public func clone(): Array<T>","documentation":"","filterText":"clone","insertText":"clone()","insertTextFormat":1,"kind":2,"label":"clone()","sortText":""},{"deprecated":false,"detail":"(function) public func clone(range: Range<Int64>): Array<T>","documentation":"","filterText":"clone","insertText":"clone(${1:range: Range<Int64>})","insertTextFormat":2,"kind":2,"label":"clone(range: Range<Int64>)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"concat","insertText":"concat","insertTextFormat":1,"kind":2,"label":"concat","sortText":""},{"deprecated":false,"detail":"(function) public func concat(other: Array<T>): Array<T>","documentation":"","filterText":"concat","insertText":"concat(${1:other: Array<T>})","insertTextFormat":2,"kind":2,"label":"concat(other: Array<T>)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"copyTo","insertText":"copyTo","insertTextFormat":1,"kind":2,"label":"copyTo","sortText":""},{"deprecated":false,"detail":"(function) public func copyTo(dst: Array<T>): Unit","documentation":"","filterText":"copyTo","insertText":"copyTo(${1:dst: Array<T>})","insertTextFormat":2,"kind":2,"label":"copyTo(dst: Array<T>)","sortText":""},{"deprecated":false,"detail":"(function) public func copyTo(dst: Array<T>, srcStart: Int64, dstStart: Int64, copyLen: Int64): Unit","documentation":"","filterText":"copyTo","insertText":"copyTo(${1:dst: Array<T>}, ${2:srcStart: Int64}, ${3:dstStart: Int64}, ${4:copyLen: Int64})","insertTextFormat":2,"kind":2,"label":"copyTo(dst: Array<T>, srcStart: Int64, dstStart: Int64, copyLen: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"fill","insertText":"fill","insertTextFormat":1,"kind":2,"label":"fill","sortText":""},{"deprecated":false,"detail":"(function) public func fill(value: T): Unit","documentation":"","filterText":"fill","insertText":"fill(${1:value: T})","insertTextFormat":2,"kind":2,"label":"fill(value: T)","sortText":""},{"deprecated":false,"detail":"(variable) public let first: Option<T>","documentation":"","filterText":"first","insertText":"first","insertTextFormat":1,"kind":6,"label":"first","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"get","insertText":"get","insertTextFormat":1,"kind":2,"label":"get","sortText":""},{"deprecated":false,"detail":"(function) public func get(index: Int64): Option<T>","documentation":"","filterText":"get","insertText":"get(${1:index: Int64})","insertTextFormat":2,"kind":2,"label":"get(index: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"isEmpty","insertText":"isEmpty","insertTextFormat":1,"kind":2,"label":"isEmpty","sortText":""},{"deprecated":false,"detail":"(function) public func isEmpty(): Bool","documentation":"","filterText":"isEmpty","insertText":"isEmpty()","insertTextFormat":1,"kind":2,"label":"isEmpty()","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"iterator","insertText":"iterator","insertTextFormat":1,"kind":2,"label":"iterator","sortText":""},{"deprecated":false,"detail":"(function) public func iterator(): Iterator<T>","documentation":"","filterText":"iterator","insertText":"iterator()","insertTextFormat":1,"kind":2,"label":"iterator()","sortText":""},{"deprecated":false,"detail":"(variable) public let last: Option<T>","documentation":"","filterText":"last","insertText":"last","insertTextFormat":1,"kind":6,"label":"last","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"map","insertText":"map","insertTextFormat":1,"kind":2,"label":"map","sortText":""},{"deprecated":false,"detail":"(function) public func map<R>(transform: (Generics-T) -> Generics-R): Array<R>","documentation":"","filterText":"map","insertText":"map<${1:R}>(${3:transform: (Generics-T) -> Generics-R})","insertTextFormat":2,"kind":2,"label":"map<R>(transform: (Generics-T) -> Generics-R)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"repeat","insertText":"repeat","insertTextFormat":1,"kind":2,"label":"repeat","sortText":""},{"deprecated":false,"detail":"(function) public func repeat(n: Int64): Array<T>","documentation":"","filterText":"repeat","insertText":"repeat(${1:n: Int64})","insertTextFormat":2,"kind":2,"label":"repeat(n: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"reverse","insertText":"reverse","insertTextFormat":1,"kind":2,"label":"reverse","sortText":""},{"deprecated":false,"detail":"(function) public func reverse(): Unit","documentation":"","filterText":"reverse","insertText":"reverse()","insertTextFormat":1,"kind":2,"label":"reverse()","sortText":""},{"deprecated":false,"detail":"(variable) public let size: Int64","documentation":"","filterText":"size","insertText":"size","insertTextFormat":1,"kind":6,"label":"size","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"slice","insertText":"slice","insertTextFormat":1,"kind":2,"label":"slice","sortText":""},{"deprecated":false,"detail":"(function) public func slice(start: Int64, len: Int64): Array<T>","documentation":"","filterText":"slice","insertText":"slice(${1:start: Int64}, ${2:len: Int64})","insertTextFormat":2,"kind":2,"label":"slice(start: Int64, len: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"splitAt","insertText":"splitAt","insertTextFormat":1,"kind":2,"label":"splitAt","sortText":""},{"deprecated":false,"detail":"(function) public func splitAt(mid: Int64): Tuple<Struct-Array<Generics-T>, Struct-Array<Generics-T>>","documentation":"","filterText":"splitAt","insertText":"splitAt(${1:mid: Int64})","insertTextFormat":2,"kind":2,"label":"splitAt(mid: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"swap","insertText":"swap","insertTextFormat":1,"kind":2,"label":"swap","sortText":""},{"deprecated":false,"detail":"(function) public func swap(index1: Int64, index2: Int64): Unit","documentation":"","filterText":"swap","insertText":"swap(${1:index1: Int64}, ${2:index2: Int64})","insertTextFormat":2,"kind":2,"label":"swap(index1: Int64, index2: Int64)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"toArray","insertText":"toArray","insertTextFormat":1,"kind":2,"label":"toArray","sortText":""},{"deprecated":false,"detail":"(function) public func toArray(): Array<T>","documentation":"","filterText":"toArray","insertText":"toArray()","insertTextFormat":1,"kind":2,"label":"toArray()","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"toString","insertText":"toString","insertTextFormat":1,"kind":2,"label":"toString","sortText":""},{"deprecated":false,"detail":"(function) public func toString(): String","documentation":"","filterText":"toString","insertText":"toString()","insertTextFormat":1,"kind":2,"label":"toString()","sortText":""}]}