{"id":"9","jsonrpc":"2.0","result":[{"deprecated":false,"detail":"(class) public class ArrayIterator<T> <: Iterator<T>","documentation":"","filterText":"ArrayIterator","insertText":"ArrayIterator<${1:T}>","insertTextFormat":2,"kind":7,"label":"ArrayIterator<T>","sortText":""},{"deprecated":false,"detail":"(function) public func init(data: Array<T>)","documentation":"","filterText":"ArrayIterator<T>","insertText":"ArrayIterator<${1:T}>(${3:data: Array<T>})","insertTextFormat":2,"kind":3,"label":"ArrayIterator<T>(data: Array<T>)","sortText":""},{"deprecated":false,"detail":"(class) public class IncompatiblePackageException <: Exception","documentation":"","filterText":"IncompatiblePackageException","insertText":"IncompatiblePackageException","insertTextFormat":1,"kind":7,"label":"IncompatiblePackageException","sortText":""},{"deprecated":false,"detail":"(function) public func init()","documentation":"","filterText":"IncompatiblePackageException","insertText":"IncompatiblePackageException()","insertTextFormat":1,"kind":3,"label":"IncompatiblePackageException()","sortText":""},{"deprecated":false,"detail":"(function) public func init(message: String)","documentation":"","filterText":"IncompatiblePackageException","insertText":"IncompatiblePackageException(${1:message: String})","insertTextFormat":2,"kind":3,"label":"IncompatiblePackageException(message: String)","sortText":""},{"deprecated":false,"detail":"(class) public class NegativeArraySizeException <: Exception","documentation":"","filterText":"NegativeArraySizeException","insertText":"NegativeArraySizeException","insertTextFormat":1,"kind":7,"label":"NegativeArraySizeException","sortText":""},{"deprecated":false,"detail":"(function) public func init()","documentation":"","filterText":"NegativeArraySizeException","insertText":"NegativeArraySizeException()","insertTextFormat":1,"kind":3,"label":"NegativeArraySizeException()","sortText":""},{"deprecated":false,"detail":"(function) public func init(message: String)","documentation":"","filterText":"NegativeArraySizeException","insertText":"NegativeArraySizeException(${1:message: String})","insertTextFormat":2,"kind":3,"label":"NegativeArraySizeException(message: String)","sortText":""},{"deprecated":false,"detail":"(BuiltInType) public Type RawArray<T>","documentation":"","filterText":"RawArray","insertText":"RawArray<${1:T}>","insertTextFormat":2,"kind":7,"label":"RawArray<T>","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"acquireArrayRawData","insertText":"acquireArrayRawData","insertTextFormat":1,"kind":2,"label":"acquireArrayRawData","sortText":""},{"deprecated":false,"detail":"(function) public unsafe func acquireArrayRawData<T>(arr: Array<T>): CPointerHandle<T>","documentation":"","filterText":"acquireArrayRawData","insertText":"acquireArrayRawData<${1:T}>(${3:arr: Array<T>})","insertTextFormat":2,"kind":2,"label":"acquireArrayRawData<T>(arr: Array<T>)","sortText":""},{"deprecated":false,"detail":"","documentation":"","filterText":"releaseArrayRawData","insertText":"releaseArrayRawData","insertTextFormat":1,"kind":2,"label":"releaseArrayRawData","sortText":""},{"deprecated":false,"detail":"(function) public unsafe func releaseArrayRawData<T>(handle: CPointerHandle<T>): Unit","documentation":"","filterText":"releaseArrayRawData","insertText":"releaseArrayRawData<${1:T}>(${3:handle: CPointerHandle<T>})","insertTextFormat":2,"kind":2,"label":"releaseArrayRawData<T>(handle: CPointerHandle<T>)","sortText":""},{"deprecated":false,"detail":"IfAvailable","documentation":"","filterText":"IfAvailable","insertText":"IfAvailable","insertTextFormat":1,"kind":14,"label":"IfAvailable","sortText":""},{"deprecated":false,"detail":"IfAvailable(level: , {=> }, {=> })","documentation":"","filterText":"IfAvailable","insertText":"IfAvailable(${1:level: ,} {=>\n\t$2\n}, {=>\n\t$3\n})","insertTextFormat":2,"kind":14,"label":"IfAvailable(level: , {=> }, {=> })","sortText":""},{"deprecated":false,"detail":"IfAvailable(syscap: , {=> }, {=> })","documentation":"","filterText":"IfAvailable","insertText":"IfAvailable(${1:syscap: ,} {=>\n\t$2\n}, {=>\n\t$3\n})","insertTextFormat":2,"kind":14,"label":"IfAvailable(syscap: , {=> }, {=> })","sortText":""}]}