{"caseFolder":"normalTest//Set"}
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":33336,"clientInfo":{"name":"vscode","version":"1.55.2"},"rootPath":"d:\\Work\\repo\\Char\\NewVersion\\cangjie_language_server\\test\\testChr\\normalTest\\Set","rootUri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/Set","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["comment","keyword","number","regexp","operator","namespace","type","struct","class","interface","enum","typeParameter","function","member","macro","variable","parameter","property","label"],"tokenModifiers":["declaration","documentation","static","abstract","deprecated","async","readonly"]}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/Set","name":"Set"}],"workDoneToken":"d62352dd-57e9-4c79-a872-6bc79921d06a"}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Work/repo/Char/NewVersion/cangjie_language_server/test/testChr/normalTest/Map/src/set.cj","languageId":"Cangjie","version":0,"text":"let setZero: Set\u003cInt32\u003e \u003d #{} // empty Set\nlet setOne: Set\u003cInt32\u003e \u003d #{5, 6, 7, 5} // setOne \u003d #{5,6,7}, as duplicated element \u00275\u0027 is removed.\nvar setTwo \u003d #{1.1, 2.1, 3.1, 4.1} // The type of setTwo is inferred to be Set\u003cFloat64\u003e.\nclass Aset { }\nclass Bset { }\n//var setThree \u003d #{Aset(), Bset()} // The type of setThree is inferred to be Set\u003cObject\u003e.\nlet nestedSet \u003d #{#{1, 2, 3, 4}, #{5, 6, 7}} // The type of nestedSet is inferred to be Set\u003cSet\u003cInt64\u003e\u003e.\n\nfunc settest123() {\n    let intSet: Set\u003cInt32\u003e \u003d #{0, 1, 2, 3, 4}\n    for (item in intSet) {\n        print(\"${item}\") // output: 01234\n    }\n    return 0\n}"}}}
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":{}}
{"jsonrpc":"2.0","method":"exit","params":{}